# added for CDP compliance: https://tmobile.gitlab.io/cdp/community-hub/documentation/COMMON/#usage
include:
  - project: 'tmobile/templates'
    ref: tmo/master
    file: '/gitlab-ci/.tmo.global.common.gitlab-ci.yml'

# exclude running pipeline on pushes for all jobs
workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: never
    - when: always

# This pipeline is expected to be triggered with the following required PARAMS

# @Pipeline trigger params {SERVICE_ID, SCM_MANAGED, REQUEST_ID}

stages:
  - tmo
  - test
  - init
  - create-repo
  - acl

variables:
  API_BASE_URL: https://cloud-api.corporate.t-mobile.com/api/jazz
  SCRIPTS_REPO: https://$GITLAB_SVC_ACCT_USER:$GITLAB_SVC_ACCT_PASSWORD@gitlab.com/tmobile/jazz/core/jazz-pipeline-module.git
  TEMPLATE_BASE_URL: https://$GITLAB_SVC_ACCT_USER:$GITLAB_SVC_ACCT_PASSWORD@gitlab.com/tmobile/jazz/templates/
  REPO_BASE_URL: https://$GITLAB_SVC_ACCT_USER:$GITLAB_SVC_ACCT_PASSWORD@gitlab.com/tmobile/jazz/shared/
  WEBHOOK_URL: https://gitlab.events.jazz.t-mobile.com/api/webhook
  DOCKER_IMAGE: registry.gitlab.com/tmobile/jazz/core/packages/groovy-aws:1.0.0
  WORKING_DIRECTORY: WorkingDirectory
  WORKING_MODULE_DIRECTORY: $WORKING_DIRECTORY/jazz-pipeline-module
  EVENT_HANDLER: GITLAB_CI
  EVENT_TYPE: SERVICE_CREATION

input-validation:
  stage: init
  image: $DOCKER_IMAGE
  script:
    - curl ifconfig.co
    - git clone -b master $SCRIPTS_REPO $WORKING_MODULE_DIRECTORY    # Cloning  build module
    - groovy -cp $WORKING_MODULE_DIRECTORY/ scripts/CreateServiceUtilityModule.groovy initializeModules
  artifacts:
    paths:
      - $WORKING_DIRECTORY
    when: always

get-template:
  stage: create-repo
  image: $DOCKER_IMAGE
  script:
    - curl ifconfig.co
    - groovy -cp $WORKING_MODULE_DIRECTORY/ $WORKING_MODULE_DIRECTORY/Login.groovy  getAuthToken  || exit 1  #Renewing the token
    - groovy -cp $WORKING_MODULE_DIRECTORY/ $WORKING_MODULE_DIRECTORY/ConfigLoader.groovy   getConfigData || exit 1  #getting config data
    - groovy -cp $WORKING_MODULE_DIRECTORY/ scripts/CreateServiceUtilityModule.groovy createTemplate
  rules:
    - if: '$SCM_MANAGED == "true"'
      when: always
  artifacts:
    paths:
      - $WORKING_DIRECTORY
    when: always

acl-permission:
  stage: acl
  image: $DOCKER_IMAGE
  variables:
    JOB_STATUS: "FAILED"
  script:
    - curl ifconfig.co
    - groovy -cp $WORKING_MODULE_DIRECTORY/ $WORKING_MODULE_DIRECTORY/Login.groovy  getAuthToken  || exit 1  #Renewing the token
    - groovy -cp $WORKING_MODULE_DIRECTORY/ $WORKING_MODULE_DIRECTORY/ConfigLoader.groovy   getConfigData || exit 1  #getting config data
    - groovy -cp $WORKING_MODULE_DIRECTORY/ scripts/CreateServiceUtilityModule.groovy updateAcl
  artifacts:
    paths:
      - $WORKING_DIRECTORY
    when: always

#s3 Role
s3Role:
  Type: AWS::IAM::Role
  Properties:
    RoleName: jazz-${self:service}-${self:custom.myStage}
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Path: "/"
    Policies:
      -
        PolicyName: "jazz-s3-logs-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "s3:ListBucket" 
              Resource: {event_s3_arn}
            - Effect: "Allow"
              Action:
                - "s3:*"
              Resource: "{event_s3_arn}/*"       
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            #Start:VPC
            - Effect: "Allow"
              Action:
                - "ec2:DescribeInstances"
                - "ec2:CreateNetworkInterface"
                - "ec2:AttachNetworkInterface"
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:DeleteNetworkInterface"
              Resource: "*"
            #End:VPC
              
#DynamoDb Role
dynamoDbRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: jazz-${self:service}-${self:custom.myStage}
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Path: "/"
    Policies:
      -
        PolicyName: "jazz-dynamodb-stream-logs"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:DescribeTable"
                - "dynamodb:UpdateItem"
                - "dynamodb:GetItem"
                - "dynamodb:DescribeStream"
                - "dynamodb:GetRecords"
                - "dynamodb:GetShardIterator"
                - "dynamodb:ListStreams"
              #Start:dynamoDbstreamGetArn
              Resource: { Fn::GetAtt: [ sourceDynamoDbTable, StreamArn ] }
              #End:dynamoDbstreamGetArn
              #ResourceDynamoDbDisabled: {event_dynamodb_stream_arn}
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            #Start:VPC
            - Effect: "Allow"
              Action:
                - "ec2:DescribeInstances"
                - "ec2:CreateNetworkInterface"
                - "ec2:AttachNetworkInterface"
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:DeleteNetworkInterface"
              Resource: "*"
            #End:VPC

#SQS Role
sqsRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: jazz-${self:service}-${self:custom.myStage}
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Path: "/"
    Policies:
      -
        PolicyName: "jazz-sqs-queue-logs-policy"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "sqs:SendMessage"
                - "sqs:ReceiveMessage"
                - "sqs:DeleteMessage"
                - "sqs:GetQueueAttributes"
              Resource: {event_sqs_arn}
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            #Start:VPC
            - Effect: "Allow"
              Action:
                - "ec2:DescribeInstances"
                - "ec2:CreateNetworkInterface"
                - "ec2:AttachNetworkInterface"
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:DeleteNetworkInterface"
              Resource: "*"
            #End:VPC

#kinesis Role
kinesisRole:
  Type: AWS::IAM::Role
  Properties:
    RoleName: jazz-${self:service}-${self:custom.myStage}
    AssumeRolePolicyDocument:
      Version: "2012-10-17"
      Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
              - "lambda.amazonaws.com"
          Action:
            - "sts:AssumeRole"
    Path: "/"
    Policies:
      -
        PolicyName: "jazz-kinesis-stream-logs"
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "kinesis:DescribeStream"
                - "kinesis:GetRecords"
                - "kinesis:GetShardIterator"
                - "kinesis:ListStreams"
              #Start:kinesisStreamGetArn
              Resource: { Fn::GetAtt: [ sourceKinesisStreams, Arn ] }
              #End:kinesisStreamGetArn
              #ResourceKinesisDisabled: {event_kinesis_stream_arn}
            - Effect: "Allow"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
              Resource: "*"
            #Start:VPC
            - Effect: "Allow"
              Action:
                - "ec2:DescribeInstances"
                - "ec2:CreateNetworkInterface"
                - "ec2:AttachNetworkInterface"
                - "ec2:DescribeNetworkInterfaces"
                - "ec2:DeleteNetworkInterface"
              Resource: "*"
            #End:VPC
             
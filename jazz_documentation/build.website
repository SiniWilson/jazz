#!/usr/bin/env sh

cd app
cp -rf . ..
cd ..
rm -rf app

#
# TODO: Consider moving jq â†’ config
#
JQ_BINARY=https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
S3_BUCKET=https://s3-us-west-2.amazonaws.com/cloud-api-doc.corporate.t-mobile.com
TEMP=$(mktemp -d)

#
# Pull paths from S3 bucket manifest
#
echo -e '\nPulling paths from S3 bucket manifest...\n'

next_token=' '
curl -L "$S3_BUCKET?list-type=2" > $TEMP/1
xpath $TEMP/1 '/ListBucketResult/Contents/Key' > $TEMP/2 2>/dev/null

while [ -n "$next_token" ]; do
  if [ -n "$(sed -n '/.*NextContinuationToken.*/p' $TEMP/1)" ]; then
    next_token=$(xpath $TEMP/1 '/ListBucketResult/NextContinuationToken/text()')
    curl -L -G "$S3_BUCKET?list-type=2" --data-urlencode "continuation-token=$next_token" > $TEMP/1
    xpath $TEMP/1 '/ListBucketResult/Contents/Key' >> $TEMP/2 2>/dev/null
  else
    unset next_token
  fi
done

sed -E 's/<[^>]+>/ /g' $TEMP/2 > $TEMP/1
tr ' ' '\n' < $TEMP/1 > $TEMP/2
paths=$(sed '/^jazz_.*swagger.json/!d; /-dev/d; /stg/d' $TEMP/2)

echo -e '\nDone!\n'
echo '{"swagger": "2.0"}' > $TEMP/1
#
# End pull paths
#

#
# Download and merge jazz_* paths into placeholder JSON document
#
echo -e '\Downloading jazz_* paths and merging JSON...\n'

if ! [ -x "$(command -v jq)" ]; then
  curl -L $JQ_BINARY -o $TEMP/jq; chmod +x $TEMP/jq
  alias jq=$TEMP/jq
fi

for x in $paths; do
  echo $x
  curl -s -L $S3_BUCKET/$x > $TEMP/2
  if merge=$(jq -s '.[0] * .[1]' $TEMP/1 $TEMP/2); then
    jq -s '.[0] * .[1]' $TEMP/1 $TEMP/2 > $TEMP/3
    cp $TEMP/3 $TEMP/1
  fi
  echo 'Success!'
done
#
# End merge
#

#
# Add project metadata from base JSON
#
if [ -f $TEMP/3 ]; then
  serve='static'
  jq -s '.[0] * .[1]' $TEMP/3 $serve/base.json > $TEMP/1
  jq 'walk( if type == "object" then del(.options, ."x-amazon-apigateway-integration") else . end )' < $TEMP/1 > $serve/swagger.json
  echo -e '\nFinal Swagger JSON:\n'
  cat $serve/swagger.json
fi
#
# End add metadata
#
#

rm -rf $TEMP .store
hugo --cleanDestinationDir -d app
cp -rf external-content app
